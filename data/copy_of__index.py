# -*- coding: utf-8 -*-
"""Copy of _index.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YJzkP6KNk9q5D0gF8B7RSX6-mh3-4txO

##### Copyright 2018 The TensorFlow Authors.

Licensed under the Apache License, Version 2.0 (the "License");
"""

#@title Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.



"""# Get Started with TensorFlow

<table class="tfo-notebook-buttons" align="left">
  <td>
    <a target="_blank" href="https://www.tensorflow.org/tutorials/"><img src="https://www.tensorflow.org/images/tf_logo_32px.png" />View on TensorFlow.org</a>
  </td>
  <td>
    <a target="_blank" href="https://colab.research.google.com/github/tensorflow/docs/blob/master/site/en/tutorials/_index.ipynb"><img src="https://www.tensorflow.org/images/colab_logo_32px.png" />Run in Google Colab</a>
  </td>
  <td>
    <a target="_blank" href="https://github.com/tensorflow/docs/blob/master/site/en/tutorials/_index.ipynb"><img src="https://www.tensorflow.org/images/GitHub-Mark-32px.png" />View source on GitHub</a>
  </td>
</table>

This is a [Google Colaboratory](https://colab.research.google.com/notebooks/welcome.ipynb) notebook file. Python programs are run directly in the browser—a great way to learn and use TensorFlow. To run the Colab notebook:

1. Connect to a Python runtime: At the top-right of the menu bar, select *CONNECT*.
2. Run all the notebook code cells: Select *Runtime* > *Run all*.

For more examples and guides (including details for this program), see [Get Started with TensorFlow](https://www.tensorflow.org/get_started/).

Let's get started, import the TensorFlow library into your program:
"""

from __future__ import absolute_import, division, print_function
import tensorflow as tf

from google.colab import files
uploaded = files.upload()

"""Load and prepare the [MNIST](http://yann.lecun.com/exdb/mnist/) dataset. Convert the samples from integers to floating-point numbers:"""

from google.colab import files
uploaded = files.upload()

from google.colab import files
uploaded = files.upload()

import h5py
import numpy as np
with h5py.File('train_128.h5','r') as H:
  data = np.copy(H['data'])
with h5py.File('train_label.h5','r') as H:
  label = np.copy(H['label'])
with h5py.File('test_128.h5','r') as H:
  test = np.copy(H['data'])
train_128Train=data[0:50000,:]
train_128Test=data[50000:60000,:]
train_labelTrain=label[0:50000]
train_labelTest=label[50000:60000]
max(train_labelTrain)

mnist = tf.keras.datasets.fashion_mnist

(x_train, y_train), (x_test, y_test) = mnist.load_data()
x_train, x_test = x_train / 255.0, x_test / 255.0

"""Build the `tf.keras` model by stacking layers. Select an optimizer and loss function used for training:"""

sum(y_train==label)

np.shape(x_train)

model = tf.keras.models.Sequential([  
  tf.keras.layers.BatchNormalization(),
  tf.keras.layers.Dense(900, activation=tf.nn.tanh, kernel_regularizer=tf.keras.regularizers.l2(0.0015)),   # continue search 0.0015 --0.004 
  tf.keras.layers.Dropout(0.2),
  tf.keras.layers.BatchNormalization(),
  tf.keras.layers.Dense(900, activation=tf.nn.relu, kernel_regularizer=tf.keras.regularizers.l2(0.0015)),   # continue search 0.0015 --0.004
  tf.keras.layers.Dropout(0.2),
  tf.keras.layers.Dense(10, activation=tf.nn.softmax)
])

model.compile(optimizer=tf.keras.optimizers.Adam(lr=0.0001),
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

"""Train and evaluate model:"""

model = tf.keras.models.Sequential([  
  tf.keras.layers.BatchNormalization(),
  tf.keras.layers.Dense(200, activation=tf.nn.sigmoid, kernel_regularizer=tf.keras.regularizers.l2(0.002)),   # continue search 0.0015 --0.004 
  #tf.keras.layers.Dropout(0.2),
  tf.keras.layers.BatchNormalization(),
  tf.keras.layers.Dense(200, activation=tf.nn.relu, kernel_regularizer=tf.keras.regularizers.l2(0.002)),   # continue search 0.0015 --0.004
  #tf.keras.layers.Dropout(0.2),
  tf.keras.layers.Dense(10, activation=tf.nn.softmax)
])

model.compile(optimizer=tf.keras.optimizers.Adam(lr=0.0005),
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(data, label, epochs=5, batch_size=1024)

model.evaluate(test, y_test)

"""You’ve now trained an image classifier with ~98% accuracy on this dataset. See [Get Started with TensorFlow](https://www.tensorflow.org/get_started/) to learn more."""